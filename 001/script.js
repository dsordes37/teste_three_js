//PRIMEIRO IMPORTA-SE O THREE.JS POR MEIO DO CÓDIGO LOGO ABAIXO.
import * as THREE from 'https://unpkg.com/three/build/three.module.js';

//CRIA-SE UM OBJETO DO TIPO CENA POR MAIO DO CÓDIGO LOGO ABAIXO.
//A CENA É ONDE TODOS OS OJETOS 3D SERÃO INJETADOS.
const scene = new THREE.Scene();

//A CÂMERA REPRESENTA O PONTO DE VISTA EM QUE O USUÁRIO IRA VIZUALIZAR A PÁGINA.
//CRIA-SE UM OBJETO DO TIPO CÂMERA PARA UTILIZANDO O CÓDIGO LOGO ABAIXO E PROVENDO 4 ATRIBUTOS.

// (FOV):(FIELD OF VIEW)== VALOR EM GRAUS QUE REPRESENTA A EXTENSÃO DA CENA QUE MOSTRADA NA TELA.
// (ASPECT RATIO)== DEFINE A PROPORÇÃO DA IMAGEM E NORMALMENTE É DADO PELA DIVISÃO DA LARGURA PELA ALTURA DA TELA.

//(NEAR)== OBJETOS MAIS PRÓXIMOS DA CÂMERA DO QUE ESTE VALOR NÃO SERÃO RENDERIZADOS PELO RENDERER
//(FAR)== OBJETOS MAIS DISTANTES DA CAMERA DO QUE ESTE VALOR NÃO SERÃO RENDERIZADOS PELO RENDERER

const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);



//O RENDERIZADOR É O OBJETO QUE VAI PEGAR TODAS AS CONFIGURAÇÕES PROGRAMADAS ACIMA E RENDERIZAR NA TELA.
//O OBJETO RENDERER É CRIADO UTILIZADO O CÓDIGO LOGO ABAIXO
const renderer = new THREE.WebGLRenderer();

//O TAMANHO DO RENDERER TEM QUE SER SETADO NO CÓDIGO E REPRESENTA A DIMENSÃO DA ÁREA DE TELA EM QUE O NOSSO CÓDIGO SERÁ RENDERIZADO.
//É POSSÍVEL TAMBÉM REDUZIR A RESOLUÇÃO DO QUE ESTÁ SENDO RENDERIZADO POR MEIO DE UM TERCEIRO ATRIBUTO DO MÉTODO SETSIZE O "UPDATESTYE" QUE, NESSE CASO DEVE SER DEFINIDO COMO FALSE
renderer.setSize(window.innerWidth, window.innerHeight);

//LOGO ABAIXO O ELEMENTO DOM DO RENDER É ADICIONADO AO BODY DO NOSSO HTML, O QUE PERMITE QUE A RENDERIZAÇÃO SEJA FEITA.

document.body.appendChild(renderer.domElement)

//A LINHA ABIXO CRIA UMA FIGURA GEOMÉTRICA COM SUAS PROPORÇÕES NOS EIXOS x y E z.
const geometry = new THREE.BoxGeometry(1, 1, 3);

//O METERIAL PASSA ALGUMAS CONFIGURAÇÕES DE ESTILO PARA O CUBO, NESSE CASO ELE ESTÁ PASSANDO A COR VERDE
const material = new THREE.MeshBasicMaterial({color: 0x00ff00})

//A LINHA ABAIXO CRIA UM OBJETO QUE UNE A FIGURA GEOMÉTRICA CRIADA ANTERIORMENTE COM AS CONFIGURAÇÕES DE ESTILO CRIADAS.
const cube = new THREE.Mesh(geometry, material);

//A LINHA ABAIXO ADICIONA O OBJETO À CENA 
scene.add(cube);

//A LINHA ABAIXO ADICIONA 5 PIXELS AO EIXO Z DA CÂMERA, POIS CASO ISSO NÃO FOSSE FEITO, TANDO A CÂMERA QUANTO O CUBO SERIAM RENDERIZADOS NAS MESMAS CORDENADAS.
camera.position.z=5;



function animate() {
    //O ANIMATION FRAME MATEM A FUNÇÃO EM UM LOOP DESSA FORMA A ANIMAÇÃO É CONTÍNUA
    requestAnimationFrame( animate );

    //O ROTATION.X ESTABELECE UMA ROTAÇÃO EM GRAUS NO EIXO X
    cube.rotation.x += 0.01;

    //O ROTATION.X ESTABELECE UMA ROTAÇÃO EM GRAUS NO EIXO X
    cube.rotation.y += 0.01;

    //O RENDERER.RENDER RENDERIZA OS OBJETOS NA TELA, UTILIZANDO A CENA E A CÂMERA COMO PARÂMETROS.
    renderer.render( scene, camera );
}


animate()
